services:
  # ==========================================
  # WhatsApp MCP Service (All-in-One)
  # Runs Python Agent SDK + WhatsApp MCP in Docker
  # ==========================================
  - type: web
    name: whatsapp-mcp
    runtime: docker
    # Use starter plan ($7/month) for 512MB RAM
    # Free tier (512MB) has spin-down delays which cause timeouts with MCP servers
    # If memory issues persist, upgrade to standard ($25/month) for 2GB RAM
    plan: starter
    region: oregon # or 'frankfurt', 'singapore'

    # Docker configuration
    dockerfilePath: ./Dockerfile.render
    dockerContext: .

    # Health check endpoint
    healthCheckPath: /health

    # Environment variables
    # NOTE: Set these in Render dashboard (don't commit secrets!)
    envVars:
      # Claude API
      - key: ANTHROPIC_API_KEY
        sync: false  # Set manually in dashboard (REQUIRED)

      # WhatsApp Business API
      - key: WHATSAPP_ACCESS_TOKEN
        sync: false  # Set manually (REQUIRED)

      - key: WHATSAPP_PHONE_NUMBER_ID
        sync: false  # Set manually (REQUIRED)

      - key: WHATSAPP_WEBHOOK_VERIFY_TOKEN
        sync: false  # Set manually (REQUIRED)

      # GitHub MCP Integration
      - key: GITHUB_PERSONAL_ACCESS_TOKEN
        sync: false  # Set manually (OPTIONAL - for GitHub MCP)

      - key: ENABLE_GITHUB_MCP
        value: true  # Enable GitHub MCP server integration

      # Netlify MCP Integration
      - key: NETLIFY_PERSONAL_ACCESS_TOKEN
        sync: false  # Set manually (OPTIONAL - for Netlify MCP)

      - key: ENABLE_NETLIFY_MCP
        value: true  # Enable Netlify MCP server integration

      # Agent System Prompt
      - key: AGENT_SYSTEM_PROMPT
        value: "You are a professional CTO (Chief Technology Officer) assistant. You help users with technical architecture, code review, technology recommendations, team leadership, product development, technical debt management, and DevOps guidance. Respond professionally, concisely, and with practical technical insights."

      # Service configuration
      - key: PORT
        value: 8000  # Default port (Render may override)

    # Auto-deploy when pushing to main branch
    autoDeploy: true

# ==========================================
# DEPLOYMENT INSTRUCTIONS:
# ==========================================
#
# This configuration deploys ONE service to Render that contains:
# 1. Python Claude Agent SDK Manager (FastAPI)
# 2. WhatsApp MCP server (messaging tools)
# 3. GitHub MCP server (repository management)
# 4. Netlify MCP server (site deployment and management)
# 5. Agent spawning and conversation management
#
# ARCHITECTURE:
# - WhatsApp User sends message
# - Webhook POST -> Render FastAPI service
# - Python Claude Agent SDK Manager spawns/retrieves agent per user
# - Agents use multiple MCP tools:
#   • WhatsApp MCP: Send messages back to users
#   • GitHub MCP: List/search/manage GitHub repositories
#   • Netlify MCP: Deploy sites, manage deployments, configure settings
# - Response sent back via WhatsApp API
#
# SETUP STEPS:
# 1. Push this repo to GitHub
# 2. Go to render.com and sign up/login
# 3. Click "New" -> "Web Service"
# 4. Connect your GitHub repo
# 5. Render will use this render.yaml Blueprint
# 6. Set environment variables in Render dashboard:
#    REQUIRED:
#      - ANTHROPIC_API_KEY
#      - WHATSAPP_ACCESS_TOKEN
#      - WHATSAPP_PHONE_NUMBER_ID
#      - WHATSAPP_WEBHOOK_VERIFY_TOKEN
#    OPTIONAL (for GitHub MCP):
#      - GITHUB_PERSONAL_ACCESS_TOKEN
#    OPTIONAL (for Netlify MCP):
#      - NETLIFY_PERSONAL_ACCESS_TOKEN
# 7. Deploy!
#
# YOUR SERVICE URL:
# https://whatsapp-mcp-t9mi.onrender.com
#
# CONFIGURE WHATSAPP:
# 1. Go to Meta Business Suite -> WhatsApp -> Configuration
# 2. Set webhook URL: https://whatsapp-mcp-t9mi.onrender.com/webhook
# 3. Set verify token: (same as WHATSAPP_WEBHOOK_VERIFY_TOKEN)
# 4. Subscribe to 'messages' events
# 5. Test by sending a message to your WhatsApp Business number
#
# MCP CAPABILITIES:
# - GitHub: Create repos, search code, manage issues/PRs, create files
# - Netlify: Deploy sites from GitHub, manage deployments, configure env vars
# - WhatsApp: Send messages to users
#
# ==========================================
