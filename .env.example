# ============================================
# Anthropic Claude API Configuration
# ============================================
# Get your API key from: https://console.anthropic.com/settings/keys
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# ============================================
# Redis Session Storage Configuration
# ============================================
# Redis connection URL for session persistence
REDIS_URL=redis://localhost:6379

# ============================================
# Neon PostgreSQL Database Configuration
# ============================================
# Neon serverless PostgreSQL connection URL
DATABASE_URL=postgresql://user:password@host:5432/database

# Enable SQL query logging (set to 1 for debugging, 0 for production)
SQLALCHEMY_ECHO=0

# ============================================
# PostgreSQL MCP Server
# ============================================
# Enable PostgreSQL MCP for AI agent database access via natural language
ENABLE_PGSQL_MCP=true

# ============================================
# WhatsApp Business Cloud API Configuration
# ============================================
# WhatsApp access tokens from Meta Business Suite
WHATSAPP_ACCESS_TOKEN=your_whatsapp_access_token
WHATSAPP_PERMANENT_TOKEN=your_permanent_token

# WhatsApp Business Account ID from Meta Business Suite
WHATSAPP_BUSINESS_ACCOUNT_ID=your_business_account_id

# Phone number ID for sending/receiving WhatsApp messages
WHATSAPP_PHONE_NUMBER_ID=your_phone_number_id

# Webhook verification token (must match Meta dashboard configuration)
WHATSAPP_WEBHOOK_VERIFY_TOKEN=your_webhook_verify_token

# ============================================
# Agent System Prompt Configuration
# ============================================
# Default system prompt defining agent personality and capabilities
AGENT_SYSTEM_PROMPT="You are a professional CTO assistant..."

# ============================================
# GitHub MCP Integration
# ============================================
# Personal Access Token for GitHub API access (requires repo, read:user, read:org scopes)
GITHUB_PERSONAL_ACCESS_TOKEN=your_github_pat

# Enable/disable GitHub MCP server integration
ENABLE_GITHUB_MCP=true

# ============================================
# GitHub App (Droid Bot) Configuration
# ============================================
GITHUB_APP_ID=your_app_id
GITHUB_CLIENT_ID=your_client_id
GITHUB_WEBHOOK_SECRET=your_webhook_secret
GITHUB_INSTALLATION_ID=your_installation_id
GITHUB_PRIVATE_KEY_PATH=./path-to-private-key.pem

# ============================================
# Netlify MCP Integration
# ============================================
# Personal Access Token for Netlify API access
NETLIFY_PERSONAL_ACCESS_TOKEN=your_netlify_token

# Enable/disable Netlify MCP server integration
ENABLE_NETLIFY_MCP=true

# ============================================
# Neon MCP Integration
# ============================================
# Neon API Key for database management via MCP
NEON_API_KEY=your_neon_api_key

# Enable/disable Neon MCP server integration
ENABLE_NEON_MCP=true

# ============================================
# Logfire Telemetry & Observability
# ============================================
# Logfire project token for distributed tracing
LOGFIRE_TOKEN=your_logfire_token
LOGFIRE_READ_TOKEN=your_read_token

# Enable/disable Logfire telemetry
ENABLE_LOGFIRE=true

# Environment (development = 100% sampling, production = 10% sampling)
ENV=development

# ============================================
# Playwright MCP Integration
# ============================================
# Enable/disable Playwright MCP server integration for browser automation
ENABLE_PLAYWRIGHT_MCP=true

# Run browsers in headless mode (no GUI) - required for server deployment
PLAYWRIGHT_HEADLESS=true

# ============================================
# Design Review & QA Testing Configuration
# ============================================
# Enable visual design review with Playwright screenshots
DESIGN_REVIEW_ENABLED=true

# Enable QA E2E testing with Playwright (functional testing)
QA_TESTING_ENABLED=true

# Maximum iterations for design review/QA testing loops
MAX_TESTING_ITERATIONS=5

# Port range for dev servers during testing (start-end)
DEV_SERVER_PORT_RANGE=3000-3100
