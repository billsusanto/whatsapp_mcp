# ============================================
# Dockerfile for Python Agent SDK Service
# Deployment: Render (Claude Agent SDK for WhatsApp)
# Multi-stage build for memory optimization
# ============================================

# Stage 1: Builder (installs build dependencies)
FROM python:3.11-slim AS builder

# ============================================
# System Setup
# ============================================
WORKDIR /app

# Install system dependencies, Node.js, and Git
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    gnupg \
    git \
    && mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
    && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list \
    && apt-get update \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# Install Claude Code CLI and MCP servers globally
# Pre-installing these prevents npx from downloading at runtime (which times out)
RUN npm install -g @anthropic-ai/claude-code && \
    npm install -g @modelcontextprotocol/server-github && \
    npm install -g @netlify/mcp && \
    echo "✓ Installed MCP packages successfully" && \
    npm list -g --depth=0 | grep -E "(claude-code|server-github|netlify/mcp)" || echo "⚠️ Warning: Some packages may not have installed"

# Create non-root user for security
RUN useradd -m -u 1001 agentuser

# ============================================
# Python Dependencies
# ============================================
# Copy requirements.txt first (for Docker layer caching)
COPY requirements.txt .

# Upgrade pip and install Python packages (use wheel cache for faster builds)
RUN pip install --upgrade pip && \
    pip wheel --no-cache-dir --wheel-dir /wheels -r requirements.txt

# ============================================
# Stage 2: Runtime (minimal image)
# ============================================
FROM python:3.11-slim AS runtime

WORKDIR /app

# Install ONLY runtime dependencies (no build tools)
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    gnupg \
    git \
    && mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
    && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list \
    && apt-get update \
    && apt-get install -y nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Install NPM packages globally with minimal cache
RUN npm install -g --production \
    @anthropic-ai/claude-code \
    @modelcontextprotocol/server-github \
    @netlify/mcp \
    && npm cache clean --force \
    && echo "✓ Installed MCP packages successfully"

# Copy Python wheels from builder and install
COPY --from=builder /wheels /wheels
RUN pip install --no-cache-dir --no-index --find-links=/wheels /wheels/* \
    && rm -rf /wheels

# Create non-root user
RUN useradd -m -u 1001 agentuser

# Copy application code
COPY --chown=agentuser:agentuser src/python/ ./src/python/

# Switch to non-root user
USER agentuser

# ============================================
# Environment Variables (Set in Render Dashboard)
# ============================================
# - ANTHROPIC_API_KEY (required)
# - WHATSAPP_ACCESS_TOKEN (required)
# - WHATSAPP_PHONE_NUMBER_ID (required)
# - WHATSAPP_WEBHOOK_VERIFY_TOKEN (required)
# - GITHUB_PERSONAL_ACCESS_TOKEN (optional)
# - NETLIFY_PERSONAL_ACCESS_TOKEN (optional)
# - PORT (automatically set by Render, defaults to 8000)

# ============================================
# Expose Port
# ============================================
EXPOSE 8000

# ============================================
# Health Check
# ============================================
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8000}/health || exit 1

# ============================================
# Start FastAPI Agent Service
# ============================================
CMD ["python", "-u", "src/python/main.py"]
